
@for $i from 1 through 9 {
    //font-waight
    .f#{$i} {
        &00 {
            font-weight: ($i)*100 !important;
        }
    }
    //colom count
    .colm {
        &-#{$i} {
            column-count: $i !important;
        }
        &-gap-#{$i} {
            column-gap: ($i)*10px;
        }
        &-xs {
            &-#{$i} {
                @include media-breakpoint-up(xs) {
                    column-count: $i !important;
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(xs) {
                    column-gap: ($i)*10px;
                }
            }
        }
        &-sm {
            &-#{$i} {
                @include media-breakpoint-up(sm) {
                    column-count: $i !important; 
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(sm) {
                    column-gap: ($i)*10px;
                }
            }
        }
        &-md {
            &-#{$i} {
                @include media-breakpoint-up(md) {
                    column-count: $i !important;
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(md) {
                    column-gap: ($i)*10px;
                }
            }
        }
        &-lg {
            &-#{$i} {
                @include media-breakpoint-up(lg) {
                    column-count: $i !important;
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(lg) {
                    column-gap: ($i)*10px;
                }
            }
        }
        &-xl {
            &-#{$i} {
                @include media-breakpoint-up(xl) {
                    column-count: $i !important;
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(xl) {
                    column-gap: ($i)*10px;
                }
            }
        }
        &-xxl {
            &-#{$i} {
                @include media-breakpoint-up(xxl) {
                    column-count: $i !important;
                }
            }
            &-gap-#{$i} {
                @include media-breakpoint-up(xxl) {
                    column-gap: ($i)*10px;
                }
            }
        }
    }
}


@each $k , $val in $colors {
    .text-#{$k} {
        color:  $val !important;
    }
    .text-hover-#{$k} {
        &:hover {
            color: $val !important;
        }
    }
    .bg-#{$k} {
        background-color: $val !important;
    }
    .bg-hover-#{$k} {
        &:hover {
            background-color: $val !important;
        }
    }

    .border-#{$k} {
        border-color: $val !important;
    }

    .border-hover-#{$k} {
        &:hover {
            border-color: $val !important;
        }
    } 

    
    //create lighter
    @if($k != 'white'){
        @for $i from 1 through 9 {
            .text-light-#{$k}-#{$i} {
                color: mix($val, #fff, $i * 10%) !important;
            }
            .bg-light-#{$k}-#{$i} {
                background-color: mix($val, #fff, $i * 10%) !important;;
            }   
            
            .border-light-#{$k}-#{$i} {
                border-color: mix($val, #fff, $i * 10%) !important;
            }
        
            .border-light-hover-#{$k}-#{$i} {
                &:hover {
                    border-color: mix($val, #fff, $i * 10%) !important;
                }
            } 
        }
    }

    //create darker
    @if($k != 'black' and $k != 'white'){
        @for $i from 1 through 9 {
            .text-dark-#{$k}-#{$i} {
                color: mix($val, #000, $i * 10%);
            }
            .bg-dark-#{$k}-#{$i} {
                background-color: mix($val, #000, $i * 10%);
            }   
            
            .border-dark-#{$k}-#{$i} {
                border-color: mix($val, #000, $i * 10%) !important;
            }
        
            .border-dark-hover-#{$k}-#{$i} {
                &:hover {
                    border-color: mix($val, #000, $i * 10%) !important;
                }
            } 
        }
    }

    

    @for $i from 1 through 9 {
        @if($k == 'white') {            
            .text-#{$k}-#{$i} {
                color: mix(map-get($colors, 'white'), #000, $i * 10%);
            }   

            .bg-#{$k}-#{$i} {
                background-color: mix(map-get($colors, 'white'), #000, $i * 10%);
            }
        } 
    }

    
}

@each $k , $val in $fonts {
 .fonts-#{$k} {
    font-family:  $val !important;
 }
}


.border {    
    &-dotted {
        border-style: dotted !important;
    }

    &-dashed {
        border-style: dashed !important;
    }

    &-md {
        @include media-breakpoint-up(md) {
            border-width: 1px !important;
            border-style: solid !important;
            &-bottom {
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }
            &-top {
                border-top-width: 1px;
                border-top-style: solid;
            }
            &-start {
                border-left-width: 1px;
                border-left-style: solid;
            }
            &-end {
                border-right-width: 1px;
                border-right-style: solid;
            }
        }
        &-0 {
            @include media-breakpoint-up(md) {
                border: none !important;
            }
        }

        &-down {
            &-end {
                &-0 {
                    @include media-breakpoint-down(md) {
                        border-right: none !important;
                    }
                }
            }
            &-start {
                &-0 {
                    @include media-breakpoint-down(md) {
                        border-left: none !important;
                    }
                }
            }
            &-top {
                &-0 {
                    @include media-breakpoint-down(md) {
                        border-top: none !important;
                    }
                }
            }
            &-bottom {
                &-0 {
                    @include media-breakpoint-down(md) {
                        border-bottom: none !important;
                    }
                }
            }
        }
    }

    &-lg {
        @include media-breakpoint-up(lg) {
            border-width: 1px !important;
            border-style: solid !important;
            &-bottom {
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }
            &-top {
                border-top-width: 1px;
                border-top-style: solid;
            }
            &-start {
                border-left-width: 1px;
                border-left-style: solid;
            }
            &-end {
                border-right-width: 1px;
                border-right-style: solid;
            }
        }
        &-down {
            &-0 {
                @include media-breakpoint-down(lg) {
                    border: none !important;
                }
            }
        }
        &-0 {
            @include media-breakpoint-up(md) {
                border: none !important;
            }
        }
    }
}

.position {
    &-lg {
        &-down {
            &-absolute {
                @include media-breakpoint-down(lg) {
                    position: absolute;
                }
            }
        }
    }
    &-md {
        &-down {
            &-absolute {
                @include media-breakpoint-down(md) {
                    position: absolute;
                }
            }
        }
    }
    &-sm {
        &-down {
            &-absolute {
                @include media-breakpoint-down(sm) {
                    position: absolute;
                }
            }
        }
    }
}


.u-text-shadow {
    @include text-shadow(0, 2px, 10px, rgba(map-get($colors, 'black'), 0.3));
}






.d-xxl {
    @include media-breakpoint-up(xxl) {
        &-none {
            display: none !important;
        }
        &-block {
            display: block !important;
        }
    }
}

.h100 {
    height: 100%;
}


.border-none {
    border: none !important;
}

.text {
    &-small {
        font-size: 12px;
    }
    &-md {
        &-small {
            font-size: 14px;
        }
    }
    &-xs {
        &-small {
            font-size: 10px;
        }
    }
}

.object-fit-cover {
    object-position: top left;
}

// .bg-gradiant {
//     background-image: linear-gradient(to bottom left, map-get($colors, 'primary-sub'), map-get($colors, 'primary-alt'));
// }